# Generated by Django 5.2 on 2025-10-29 21:22

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending Upload'), ('uploaded', 'Uploaded - Awaiting Processing'), ('processing', 'Processing'), ('completed', 'Analysis Complete'), ('failed', 'Processing Failed')], default='pending', max_length=20)),
                ('pitch_deck', models.FileField(blank=True, null=True, upload_to='pitch_decks/')),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('technology_description', models.TextField(blank=True)),
                ('funding_ask', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='deals_deal_created_483300_idx'), models.Index(fields=['status'], name='deals_deal_status_06cb7b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_strength', models.IntegerField(help_text='Quality and experience of founding team', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('market_opportunity', models.IntegerField(help_text='Size and growth potential of target market', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('product_innovation', models.IntegerField(help_text='Technical differentiation and uniqueness', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('business_model', models.IntegerField(help_text='Revenue viability and scalability', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('overall_score', models.FloatField(help_text='Weighted average or AI-generated overall score', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('strengths', models.JSONField(default=list)),
                ('concerns', models.JSONField(default=list)),
                ('investment_thesis', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='deals.deal')),
            ],
            options={
                'verbose_name_plural': 'Assessments',
            },
        ),
        migrations.CreateModel(
            name='Founder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('background', models.TextField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='founders', to='deals.deal')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
    ]
